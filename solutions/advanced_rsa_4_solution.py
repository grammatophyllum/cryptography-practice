'''
An RSA modulus n had 4 digits removed from an unknown position.
Given q, e, and c, we can recover m by brute forcing the missing digits of n
and then using the RSA decryption process.
'''

from Crypto.Util.number import long_to_bytes, inverse

# 2469 is removed from a part of n
# Students do not know 4 digit removed part, so they have to brute force 1000-9999
q=160446965155303645139827294652155737609108281317442233798617648137487947679352278170081767589662200666945283583097722789385021208500373964752341831302004077382722141662608238483301925376215538722011270365533924792966371139115653479706410997616418956638927788844269678415420576899619683759194142616771356875793
n=2543463693221655363788872879146707680202658211408049324631977595424022307016797578156066573041503103895158822254338914757441985374074781121598994371836055993999305366589544693631637712788545967427732196054785258225823354999411970170175319572747530611528636010549925181926117106921497529051170898702183515066872401342052995351244707260105613346539224140098842842751469433829742986753688595126612637630722023318089859602155951332895790476157428762844698640820242139120759858037356584355975788148630992695487944672835206319958377710944537226541536140295782466358861552686802395911467245986371690658260938361358394689
e=65537
c=18778700304797734241487291218570531495153753844433314835212671864974565052215725412846212050242304620781344562176619923303476793420179924519203358165880340134761435002108233622067495567330113337354020563913209810978353905601422020600520021312926758649166212220739297828943526238371680783897248981665596667962861360952195412320803171959958765312192972334254466818647833059595539805759912634048102937590956342438186964788186086256854044353295149386348833586687547182207957730497698147390556485979861336944229813126611679962785071068894078080171445993220079707529396329101160792039089360305683676391186192895333665953623

n = str(n)
found = False
for i in range(len(n) + 1):
    for removed in range(0, 9999+1):
        removed = str(removed).zfill(4) # ensure it's 4 digits with leading zeros
        inserted = n[:i] + f"{removed}" + n[i:]
        possible_n = int(inserted)
        if possible_n % q == 0:
            found = True
            p = possible_n // q
            n = possible_n
            break
    if found: break

phi = (p-1)*(q-1)
d = inverse(e, phi)
m = pow(c, d, n)
m = str(long_to_bytes(m))[2:-1].strip()
print(m)