from Crypto.Util.number import long_to_bytes, bytes_to_long, inverse

c=3099024660438833273947948083595240567182822549726647891517683299260747281080860659325803453168529498313586920000826541572129624272081042411812398976850115564444568359556728309242330318244204580977162326434436146009220430583427600469383189343736153372423032077773366441010405218479324977185432092452964986843158431062462359924720062697697495742
n=15120095257069666957074954087859540741509677405250373128892032595933463673413420950923026178850292058802741381250689502651160882059576782814684069021055039999705816144950276340014549475295989907606540343379159745054333267818526549687416153049117359078003276341502137055412253252507664086504391157403935852593202895932800460734313636172253784177
e=65537

# Experimenting with FactorDB, we realise that factors given is WRONG
# Students need to understand how to CROSS-REFERENCE between multiple factor databases

# Correct factors From https://www.alpertron.com.ar/ECM.HTM
phi = '15 120095 214700 645632 756247 408123 198037 649055 272145 016891 535250 055934 212153 008911 344932 283959 822726 572827 136971 576380 855606 674707 965904 426558 624595 469689 359698 419859 486336 665940 319041 137353 316552 098109 672667 690732 654997 697999 223115 086679 627988 775562 705330 315137 198318 065799 694711 039998 829120 567873 188520 431279 990148 180158 912425 816489 984000 000000'
phi = phi.replace(' ','')
phi = int(phi)

d = inverse(e, phi)
m = long_to_bytes(pow(c, d, n))
m = str(m)
print(m)