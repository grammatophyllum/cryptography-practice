'''
Observe that e is quite large, and n is also large. This suggests that the private exponent d might be small
Given that d is small, we can use Wiener's attack to find d efficiently.
We can use the `owiener` library to perform Wiener's attack and find the private exponent d. Once we have d, we can decrypt the ciphertext c to retrieve the plaintext message m.

To install the `owiener` library, you can use the following command:
pip install owiener
OR
py -m pip install owiener
'''

from Crypto.Util.number import long_to_bytes, bytes_to_long
import owiener

e=58736733683224025165321130108031386269418725622466644788622743547861308223766348729029603529836340453853317459781211726595441620996016267106899788909785689601471115728425238069364960578729295533503062314458290836720761429441123271110540956977567915542472670158112101426954714430866091607791956269119459692041
n=164747087490144662698961641097716876313147239847822867182464794388761050541700804371799996856632714870421614169391835253230753788450092221536129132806997988816851822646934884706627449571644526431140035047558204389567642815959384293049152105777243705600824598255290198316311722843838917895167106015777293724753
c=91731265514693419567998334207699907297253299833278565864119901022138035105142744807223270241722215433919487041169725088056431355580795517519691202726881885650691407717959368328221379384190317363560875321909347533085299682935022865646308754738185383279521534541876551151812568729014352882044734856835421205683

d= owiener.attack(e, n)
m= pow(c, d, n)

print(str(long_to_bytes(m))[2:-1].strip())