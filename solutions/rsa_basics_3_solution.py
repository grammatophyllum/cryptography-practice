from Crypto.Util.number import long_to_bytes, inverse

c=807070030765898938733063635050719453758561488662583019678215512353073230383139924395634850286877930555659854102629485689478230973727718940473292840678107640754680373053319068629969487127656485131477254380010706619602429998149131624232301950692849270764913951710103680611230512931818650769462386940988913490338
n=1704168716642103279876698751734353015420253497810147606284557497047871020241386878709638166349562111185644713285065247859262476316576322999434465128405510871287518773450608169577893001246619282437317182323721517561453837188982327857297998023877983509659133899733910945441649300017393791815699368100495428322929
e=65537

# From factordb.com
p=2712102979
q=628356935498983233806144774613424815466881096556675994228373102291360677806101432223543222010362354749526165866530412398202109830939543759645147725198347223705298239507080372399787479178392688324729421096115951562270614352281321636827861035242048421369745451591833137926599836538652978565862696949051
phi = (p-1)*(q-1)

d = inverse(e, phi)
m = str(long_to_bytes(pow(c, d, n)))

# Make string neat
start_idx = m.find('NYRCS')
m = str(m)[start_idx:-1]
print(m)

# --- Alternative solution (Easier) ---
from Crypto.Util.number import long_to_bytes, inverse

c=6237745251830987616657691814320483745464624712282971846715
n=6396959152725160364204672238499322570376859599356909043929 # Copy n into factordb.com to get p, q
e=65537

# Insert values (p,q) here from factordb.com
p = 8395391563393013077910136467
q = 761960785798038162395994853987

phi = (p-1)*(q-1)
d = inverse(e, phi)
m = str(long_to_bytes(pow(c, d, n)))
print(m)
